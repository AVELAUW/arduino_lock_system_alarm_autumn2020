//Used libraries
#include <Servo.h>

//Create servo object to control a servo
Servo myServo;   

//Time to set as a timer in seconds
const int TIME = 30;

//Calculate the time per degree rate by converting TIME from
//seconds to milliseconds and dividing by the maximum degrees
//in the servo's range
const int TIME_PER_DEG = ?;

//Initialize the servo pin variable
int servoPin  = ?;  //Servo signal pin number to control servo 

//The position for the servo
int servoPos;

//Initialize timer global variables
unsigned long startTime;
unsigned long currTime;

//Setting the servo on its pin to the servo object
void setup() {
  myServo.attach(servoPin);
}

void loop() {
  //Identify where position 180 degrees is
  //by setting the servoPos to 180, make the servo move
  //there and delaying 3 seconds.
  servoPos = ?;
  myServo.write(?);
  delay(?);
  
  //Try each function at a time, then try both
  timer();
  //alarm();
}

//This function moves the servo as a timer
void timer() {
  //Time when going in the function
  startTime = millis(); 
  //Time to update and notice the time difference over time
  currTime = millis();  
  
  //Keep track of how many roations the servo does
  int moveCounts = 1;
  
  //Create a while loop that repeats while 
  //the currTime (updated later) - the startTime is
  //less than the TIME in seconds(Arduino reads milliseconds 
  //so a multiplication is needed).
  while ((?) < (?)) {
    
    long timer = currTime - startTime;
    
    //Moves one degree as a timer
    if(timer > TIME_PER_DEG * moveCounts) {
      //Reduce the servo position by 1 ('--' means 'x = x-1')
      servoPos??;
      //Move the servo to the new position
      myServo.write(?);
      //Increment the moveCounts variable by 1 ('++' means 'x = x+1')
      moveCounts??;
    }
    
    // Updates the current time
    currTime = millis(); 
    
  }
  
  //Set the servo position back to 180 and move it there
  ?
  ?
}

//This function moves the servo as a ringing alarm
void alarm() {
  
  for(int x = 0; x <= 1080; x++) {
    
    //If the modulo of x by 720 equals 0:
    //  Set the servo position to 180 and move it there,
    //  then set a delay of half a second.
    //Else if the modulo of x by 720 equals 360:
    //  Set the servo position to 0 and move it there,
    //  then set a delay of half a second.
    if(?) {
      ?
      ?
      ?
    } else if (?){
      ?
      ?
      ?
    }
    
  }
  
}
