//Used libraries
#include <Servo.h>

//Create servo object to control a servo
Servo myServo;   

//Time inbetween full rotations in seconds (start by setting to 5)
const int TIME = ?;
//Degree of rotation for the servo (either 180 or 360)
const int DEGREE = ?;

//Calculate the time per degree rate by converting TIME from
//seconds to milliseconds and dividing by the maximum degrees
//in the servo's range
const int TIME_PER_DEG = TIME*1000/DEGREE;

//Initialize the servo pin variable
int servoPin  = ?;  //Servo signal pin number to control servo 

//The position for the servo
int servoPos;

//Initialize timer global variables
unsigned long startTime;
unsigned long currTime;

//Setting the servo on its pin to the servo object
void setup() {
  myServo.attach(servoPin);
}

void loop() {
  //Set the servoPos to DEGREE 
  //Pass in the servoPos variable to the write function
  //Delay by TIME seconds.
  servoPos = ?;
  myServo.write(?);
  delay(?*1000);
  
  //Try each function at a time, then try both
  timer();
  //alarm();
}

//This function moves the servo as a timer
void timer() {
  //Time when going in the function
  startTime = millis(); 
  //Time to update and notice the time difference over time
  currTime = millis();  
  
  //Keep track of how many roations the servo does
  int moveCounts = 0;
  
  //Create a while loop that repeats while 
  //the currTime minus the startTime is
  //less than the TIME in seconds.
  while (? < ?*1000) {
    
    //Moves one degree as a timer
    if(currTime - startTime > TIME_PER_DEG * moveCounts) {
      //Reduce the servo position by 1 ('--' means 'x = x-1')
      servoPos??;
      //Move the servo to the new position (servoPos)
      myServo.write(?);
      //Increment the moveCounts variable by 1 ('++' means 'x = x+1')
      moveCounts??;
    }
    
    // Updates the current time
    currTime = millis(); 
  }
}

/*
//This function moves the servo as a ringing alarm
void alarm() {
  
  for(int x = 0; x <= 1080; x++) {
    
    //If the modulo of x by 720 equals 0:
    //  Set the servo position to 180 and move it there,
    //  then set a delay of half a second.
    //Else if the modulo of x by 720 equals 360:
    //  Set the servo position to 0 and move it there,
    //  then set a delay of half a second.
    if(?) {
      ?
      ?
      ?
    } else if (?){
      ?
      ?
      ?
    }
  }
}
*/
